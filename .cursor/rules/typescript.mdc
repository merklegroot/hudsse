---
description: TypeScript Rules
globs:
alwaysApply: true
---

## Semicolons
Use semicolons to terminate statements.

## Function Declarations
Prefer function declarations over const arrow functions for methods *especially* with exports.
This makes jest unit test mocking more flexible.

Exceptions to this include when it there's a concern about behavior with `this`.

## Boolean Naming
Boolean variable names should be phrased as questions using verbs.
This makes the code more readable and self-documenting.

Examples:
``` text
wasSuccessful
isCompleted
hasPermission
canExecute
```

## Control Flow
Ternaries are often best for simple conditionals.
Avoid `else if` chains when possible.
Prefer early returns, guard clauses, or switch statements for better readability.
Exception: Use `else if` only when it eliminates code duplication.

## Switch Statements
Don't use switch statements in TypeScript/JavaScript.
In other languages that support pattern matching, the pattern matching switch statment can be ok.

## Code Nesting
Minimize nesting levels to improve readability.
Use early returns, extract functions, or refactor conditions to reduce complexity.