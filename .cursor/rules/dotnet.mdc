---
description:
globs:
alwaysApply: true
---

# URLs

* .NET Download page
<https://dotnet.microsoft.com/en-us/download>

* .NET Installer Tool (Linux and Mac)
<https://dot.net/v1/dotnet-install.sh>

(Windows has a separate script. TODO: Get the URL)

# Manual Version Downloads
<https://dotnet.microsoft.com/en-us/download/dotnet>

# .NET 7 Downloads
<https://dotnet.microsoft.com/en-us/download/dotnet/7.0>

# .NET 7 Linux AMD 64

@https://builds.dotnet.microsoft.com/dotnet/Sdk/7.0.410/dotnet-sdk-7.0.410-linux-arm64.tar.gz 

when the user asks to install the .net 7 sdk, it should download that file and use its contents for the installation.



* Installer Tool Syntax
```shell
./dotnet-install.sh --help
.NET Tools Installer
Usage:
       # Install a .NET SDK of a given Quality from a given Channel
       dotnet-install.sh [-c|--channel <CHANNEL>] [-q|--quality <QUALITY>]
       # Install a .NET SDK of a specific public version
       dotnet-install.sh [-v|--version <VERSION>]
       dotnet-install.sh -h|-?|--help

dotnet-install.sh is a simple command line interface for obtaining dotnet cli.
    Note that the intended use of this script is for Continuous Integration (CI) scenarios, where:
    - The SDK needs to be installed without user interaction and without admin rights.
    - The SDK installation doesn't need to persist across multiple CI runs.
    To set up a development environment or to run apps, use installers rather than this script. Visit https://dotnet.microsoft.com/download to get the installer.

Options:
  -c,--channel <CHANNEL>         Download from the channel specified, Defaults to `LTS`.
      -Channel
          Possible values:
          - STS - the most recent Standard Term Support release
          - LTS - the most recent Long Term Support release
          - 2-part version in a format A.B - represents a specific release
              examples: 2.0; 1.0
          - 3-part version in a format A.B.Cxx - represents a specific SDK release
              examples: 5.0.1xx, 5.0.2xx.
              Supported since 5.0 release
          Warning: Value 'Current' is deprecated for the Channel parameter. Use 'STS' instead.
          Note: The version parameter overrides the channel parameter when any version other than 'latest' is used.
  -v,--version <VERSION>         Use specific VERSION, Defaults to `Latest`.
      -Version
          Possible values:
          - latest - the latest build on specific channel
          - 3-part version in a format A.B.C - represents specific version of build
              examples: 2.0.0-preview2-006120; 1.1.0
  -q,--quality <quality>         Download the latest build of specified quality in the channel.
      -Quality
          The possible values are: daily, preview, GA.
          Works only in combination with channel. Not applicable for STS and LTS channels and will be ignored if those channels are used.
          For SDK use channel in A.B.Cxx format. Using quality for SDK together with channel in A.B format is not supported.
          Supported since 5.0 release.
          Note: The version parameter overrides the channel parameter when any version other than 'latest' is used, and therefore overrides the quality.
  --internal,-Internal               Download internal builds. Requires providing credentials via --feed-credential parameter.
  --feed-credential <FEEDCREDENTIAL> Token to access Azure feed. Used as a query string to append to the Azure feed.
      -FeedCredential                This parameter typically is not specified.
  -i,--install-dir <DIR>             Install under specified location (see Install Location below)
      -InstallDir
  --architecture <ARCHITECTURE>      Architecture of dotnet binaries to be installed, Defaults to `<auto>`.
      --arch,-Architecture,-Arch
          Possible values: x64, arm, arm64, s390x, ppc64le and loongarch64
  --os <system>                    Specifies operating system to be used when selecting the installer.
          Overrides the OS determination approach used by the script. Supported values: osx, linux, linux-musl, freebsd, rhel.6.
          In case any other value is provided, the platform will be determined by the script based on machine configuration.
          Not supported for legacy links. Use --runtime-id to specify platform for legacy links.
          Refer to: https://aka.ms/dotnet-os-lifecycle for more information.
  --runtime <RUNTIME>                Installs a shared runtime only, without the SDK.
      -Runtime
          Possible values:
          - dotnet     - the Microsoft.NETCore.App shared runtime
          - aspnetcore - the Microsoft.AspNetCore.App shared runtime
  --dry-run,-DryRun                  Do not perform installation. Display download link.
  --no-path, -NoPath                 Do not set PATH for the current process.
  --verbose,-Verbose                 Display diagnostics information.
  --azure-feed,-AzureFeed            For internal use only.
                                     Allows using a different storage to download SDK archives from.
  --uncached-feed,-UncachedFeed      For internal use only.
                                     Allows using a different storage to download SDK archives from.
  --skip-non-versioned-files         Skips non-versioned files if they already exist, such as the dotnet executable.
      -SkipNonVersionedFiles
  --jsonfile <JSONFILE>              Determines the SDK version from a user specified global.json file.
                                     Note: global.json must have a value for 'SDK:Version'
  --keep-zip,-KeepZip                If set, downloaded file is kept.
  --zip-path, -ZipPath               If set, downloaded file is stored at the specified path.
  -?,--?,-h,--help,-Help             Shows this help message

Install Location:
  Location is chosen in following order:
    - --install-dir option
    - Environmental variable DOTNET_INSTALL_DIR
    - /home/goose/.dotnet
```

# Manual Version Downloads
<https://dotnet.microsoft.com/en-us/download/dotnet>
